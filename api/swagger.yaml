---
swagger: "2.0"
info:
  description: ""
  version: "1.6.0"
  title: "myurbanwildapi"
  contact:
    name: "Athul Philip"
    email: "athulphilip1309@gmail.com"
host: "myurbanwilddbapi.herokuapp.com"
schemes:
- "https"
paths:
  /events/:
    get:
      tags:
      - "wildlifelog"
      description: "Loads a list of Event"
      operationId: "getEvents"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "$page"
        in: "query"
        description: "Number of the page to retrieve. Integer value."
        required: false
        type: "string"
        x-example: "sample $page"
      - name: "lat"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ lat"
        required: false
        type: "string"
        x-example: "sample lat"
      - name: "lon"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ lon"
        required: false
        type: "string"
        x-example: "sample lon"
      - name: "date"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ date"
        required: false
        type: "string"
        x-example: "sample date"
      - name: "id"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ id"
        required: false
        type: "string"
        x-example: "sample id"
      - name: "$size"
        in: "query"
        description: "Size of the page to retrieve. Integer value"
        required: false
        type: "string"
        x-example: "sample $size"
      - name: "postcode"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ postcode"
        required: false
        type: "string"
        x-example: "sample postcode"
      - name: "thing"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ thing"
        required: false
        type: "string"
        x-example: "sample thing"
      - name: "$sort"
        in: "query"
        description: "Order in which to retrieve the results. Multiple sort criteria\
          \ can be passed. Example: sort=age ASC,height DESC"
        required: false
        type: "string"
        x-example: "sample $sort"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        400:
          description: "Status 400"
      x-swagger-router-controller: "Wildlifelog"
    post:
      tags:
      - "wildlifelog"
      description: "Adds a Event"
      operationId: "postEvents"
      consumes:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Event"
      x-swagger-router-controller: "Wildlifelog"
  /events/{eventid}:
    get:
      tags:
      - "wildlifelog"
      description: "Loads a Event"
      operationId: "getEventsEventid"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "eventid"
        in: "path"
        description: "Identifier of the Event"
        required: true
        type: "string"
        x-example: "sample eventid"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Status 400"
      x-swagger-router-controller: "Wildlifelog"
    put:
      tags:
      - "wildlifelog"
      description: "Stores a Event"
      operationId: "putEventsEventid"
      consumes:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "eventid"
        in: "path"
        description: "Identifier of the Event"
        required: true
        type: "string"
        x-example: "sample eventid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Event"
      x-swagger-router-controller: "Wildlifelog"
    delete:
      tags:
      - "wildlifelog"
      description: "Deletes a Event"
      operationId: "deleteEventsEventid"
      parameters:
      - name: "eventid"
        in: "path"
        description: "Identifier of the Event"
        required: true
        type: "string"
        x-example: "sample eventid"
      responses:
        200:
          description: "Status 200"
      x-swagger-router-controller: "Wildlifelog"
  /things/:
    get:
      tags:
      - "wildlifelog"
      description: "Loads a list of Thing"
      operationId: "getThings"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "$size"
        in: "query"
        description: "Size of the page to retrieve. Integer value"
        required: false
        type: "string"
        x-example: "sample $size"
      - name: "id"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ id"
        required: false
        type: "string"
        x-example: "sample id"
      - name: "$sort"
        in: "query"
        description: "Order in which to retrieve the results. Multiple sort criteria\
          \ can be passed. Example: sort=age ASC,height DESC"
        required: false
        type: "string"
        x-example: "sample $sort"
      - name: "name"
        in: "query"
        description: "Allows to filter the collections of result by the value of field\
          \ name"
        required: false
        type: "string"
        x-example: "sample name"
      - name: "$page"
        in: "query"
        description: "Number of the page to retrieve. Integer value."
        required: false
        type: "string"
        x-example: "sample $page"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Thing"
        400:
          description: "Status 400"
      x-swagger-router-controller: "Wildlifelog"
    post:
      tags:
      - "wildlifelog"
      description: "Adds a Thing"
      operationId: "postThings"
      consumes:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Thing"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Thing"
      x-swagger-router-controller: "Wildlifelog"
  /things/{thingid}:
    get:
      tags:
      - "wildlifelog"
      description: "Loads a Thing"
      operationId: "getThingsThingid"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "thingid"
        in: "path"
        description: "Identifier of the Thing"
        required: true
        type: "string"
        x-example: "sample thingid"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Thing"
        400:
          description: "Status 400"
      x-swagger-router-controller: "Wildlifelog"
    put:
      tags:
      - "wildlifelog"
      description: "Stores a Thing"
      operationId: "putThingsThingid"
      consumes:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      produces:
      - "application/json"
      - "application/x-yaml"
      - "application/xml"
      - "text/xml"
      parameters:
      - name: "thingid"
        in: "path"
        description: "Identifier of the Thing"
        required: true
        type: "string"
        x-example: "sample thingid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Thing"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/Thing"
      x-swagger-router-controller: "Wildlifelog"
    delete:
      tags:
      - "wildlifelog"
      description: "Deletes a Thing"
      operationId: "deleteThingsThingid"
      parameters:
      - name: "thingid"
        in: "path"
        description: "Identifier of the Thing"
        required: true
        type: "string"
        x-example: "sample thingid"
      responses:
        200:
          description: "Status 200"
      x-swagger-router-controller: "Wildlifelog"
definitions:
  Event:
    type: "object"
    required:
    - "date"
    - "id"
    - "lat"
    - "lon"
    - "postcode"
    - "thing"
    properties:
      id:
        type: "string"
        example: "sample id"
        description: "Auto-generated primary key field"
      postcode:
        type: "string"
        example: "M1 5GD"
      date:
        type: "integer"
        format: "int64"
        example: 1511395200000
      thing:
        type: "string"
        example: "sample thing"
        description: "This property is a reference to a Thing"
      lat:
        type: "number"
        format: "double"
        example: 1.100000000000000088817841970012523233890533447265625
      lon:
        type: "number"
        format: "double"
        example: 1.100000000000000088817841970012523233890533447265625
    example: "{\"id\":\"sample id\",\"postcode\":\"M1 5GD\",\"date\":1511395200000,\"\
      thing\":\"sample thing\",\"lat\":1.1,\"lon\":1.1}"
  Thing:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
        example: "sample id"
        description: "Auto-generated primary key field"
      name:
        type: "string"
        example: "Jay"
    example: "{\"id\":\"sample id\",\"name\":\"Jay\"}"
